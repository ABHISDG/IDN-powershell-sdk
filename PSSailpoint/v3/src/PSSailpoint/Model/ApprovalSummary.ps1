#
# IdentityNow V3 API
# Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.
# Version: 3.0.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Pending
The number of pending access requests approvals.
.PARAMETER Approved
The number of approved access requests approvals.
.PARAMETER Rejected
The number of rejected access requests approvals.
.OUTPUTS

ApprovalSummary<PSCustomObject>
#>

function Initialize-ApprovalSummary {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${Pending},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${Approved},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${Rejected}
    )

    Process {
        'Creating PSCustomObject: PSSailpoint => ApprovalSummary' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "pending" = ${Pending}
            "approved" = ${Approved}
            "rejected" = ${Rejected}
        }

        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ApprovalSummary<PSCustomObject>

.DESCRIPTION

Convert from JSON to ApprovalSummary<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ApprovalSummary<PSCustomObject>
#>
function ConvertFrom-JsonToApprovalSummary {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSSailpoint => ApprovalSummary' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in ApprovalSummary
        $AllProperties = ("pending", "approved", "rejected")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "pending"))) { #optional property not found
            $Pending = $null
        } else {
            $Pending = $JsonParameters.PSobject.Properties["pending"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "approved"))) { #optional property not found
            $Approved = $null
        } else {
            $Approved = $JsonParameters.PSobject.Properties["approved"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "rejected"))) { #optional property not found
            $Rejected = $null
        } else {
            $Rejected = $JsonParameters.PSobject.Properties["rejected"].value
        }

        $PSO = [PSCustomObject]@{
            "pending" = ${Pending}
            "approved" = ${Approved}
            "rejected" = ${Rejected}
        }

        return $PSO
    }

}

