#
# IdentityNow V3 API
# Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.
# Version: 3.0.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Source
No description available.
.PARAMETER Privileged
No description available.
.PARAMETER Attribute
No description available.
.PARAMETER Value
No description available.
.PARAMETER Standalone
No description available.
.OUTPUTS

EntitlementSummaryAllOf<PSCustomObject>
#>

function Initialize-EntitlementSummaryAllOf {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Source},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${Privileged},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Attribute},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Value},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${Standalone}
    )

    Process {
        'Creating PSCustomObject: PSSailpoint => EntitlementSummaryAllOf' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "source" = ${Source}
            "privileged" = ${Privileged}
            "attribute" = ${Attribute}
            "value" = ${Value}
            "standalone" = ${Standalone}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to EntitlementSummaryAllOf<PSCustomObject>

.DESCRIPTION

Convert from JSON to EntitlementSummaryAllOf<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

EntitlementSummaryAllOf<PSCustomObject>
#>
function ConvertFrom-JsonToEntitlementSummaryAllOf {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSSailpoint => EntitlementSummaryAllOf' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in EntitlementSummaryAllOf
        $AllProperties = ("source", "privileged", "attribute", "value", "standalone")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "source"))) { #optional property not found
            $Source = $null
        } else {
            $Source = $JsonParameters.PSobject.Properties["source"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "privileged"))) { #optional property not found
            $Privileged = $null
        } else {
            $Privileged = $JsonParameters.PSobject.Properties["privileged"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "attribute"))) { #optional property not found
            $Attribute = $null
        } else {
            $Attribute = $JsonParameters.PSobject.Properties["attribute"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "value"))) { #optional property not found
            $Value = $null
        } else {
            $Value = $JsonParameters.PSobject.Properties["value"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "standalone"))) { #optional property not found
            $Standalone = $null
        } else {
            $Standalone = $JsonParameters.PSobject.Properties["standalone"].value
        }

        $PSO = [PSCustomObject]@{
            "source" = ${Source}
            "privileged" = ${Privileged}
            "attribute" = ${Attribute}
            "value" = ${Value}
            "standalone" = ${Standalone}
        }

        return $PSO
    }

}

