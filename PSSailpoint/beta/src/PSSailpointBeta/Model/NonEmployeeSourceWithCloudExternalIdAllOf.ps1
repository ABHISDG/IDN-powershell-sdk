#
# IdentityNow Beta API
# Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.
# Version: 3.1.0-beta
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER CloudExternalId
Legacy ID used for sources from the V1 API. This attribute will be removed from a future version of the API and will not be considered a breaking change. No clients should rely on this ID always being present.
.OUTPUTS

NonEmployeeSourceWithCloudExternalIdAllOf<PSCustomObject>
#>

function Initialize-BetaNonEmployeeSourceWithCloudExternalIdAllOf {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CloudExternalId}
    )

    Process {
        'Creating PSCustomObject: PSSailpointBeta => BetaNonEmployeeSourceWithCloudExternalIdAllOf' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "cloudExternalId" = ${CloudExternalId}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to NonEmployeeSourceWithCloudExternalIdAllOf<PSCustomObject>

.DESCRIPTION

Convert from JSON to NonEmployeeSourceWithCloudExternalIdAllOf<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

NonEmployeeSourceWithCloudExternalIdAllOf<PSCustomObject>
#>
function ConvertFrom-BetaJsonToNonEmployeeSourceWithCloudExternalIdAllOf {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSSailpointBeta => BetaNonEmployeeSourceWithCloudExternalIdAllOf' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in BetaNonEmployeeSourceWithCloudExternalIdAllOf
        $AllProperties = ("cloudExternalId")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "cloudExternalId"))) { #optional property not found
            $CloudExternalId = $null
        } else {
            $CloudExternalId = $JsonParameters.PSobject.Properties["cloudExternalId"].value
        }

        $PSO = [PSCustomObject]@{
            "cloudExternalId" = ${CloudExternalId}
        }

        return $PSO
    }

}

