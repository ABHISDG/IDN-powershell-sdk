#
# IdentityNow Beta API
# Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.
# Version: 3.1.0-beta
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER SchemaAttributes
List of schema attributes associated with this non-employee source.
.OUTPUTS

NonEmployeeSourceLiteWithSchemaAttributesAllOf<PSCustomObject>
#>

function Initialize-BetaNonEmployeeSourceLiteWithSchemaAttributesAllOf {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${SchemaAttributes}
    )

    Process {
        'Creating PSCustomObject: PSSailpointBeta => BetaNonEmployeeSourceLiteWithSchemaAttributesAllOf' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "schemaAttributes" = ${SchemaAttributes}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to NonEmployeeSourceLiteWithSchemaAttributesAllOf<PSCustomObject>

.DESCRIPTION

Convert from JSON to NonEmployeeSourceLiteWithSchemaAttributesAllOf<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

NonEmployeeSourceLiteWithSchemaAttributesAllOf<PSCustomObject>
#>
function ConvertFrom-BetaJsonToNonEmployeeSourceLiteWithSchemaAttributesAllOf {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSSailpointBeta => BetaNonEmployeeSourceLiteWithSchemaAttributesAllOf' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in BetaNonEmployeeSourceLiteWithSchemaAttributesAllOf
        $AllProperties = ("schemaAttributes")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "schemaAttributes"))) { #optional property not found
            $SchemaAttributes = $null
        } else {
            $SchemaAttributes = $JsonParameters.PSobject.Properties["schemaAttributes"].value
        }

        $PSO = [PSCustomObject]@{
            "schemaAttributes" = ${SchemaAttributes}
        }

        return $PSO
    }

}

