#
# IdentityNow Beta API
# Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.
# Version: 3.1.0-beta
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER ApplicationName
Name of the example application.
.PARAMETER Domain
Description of the example application's domain.
.OUTPUTS

ManualDiscoverApplicationsTemplate<PSCustomObject>
#>

function Initialize-BetaManualDiscoverApplicationsTemplate {
    [CmdletBinding()]
    Param (
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ApplicationName},
        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Domain}
    )

    Process {
        'Creating PSCustomObject: PSSailpointBeta => BetaManualDiscoverApplicationsTemplate' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "application_name" = ${ApplicationName}
            "domain" = ${Domain}
        }

        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ManualDiscoverApplicationsTemplate<PSCustomObject>

.DESCRIPTION

Convert from JSON to ManualDiscoverApplicationsTemplate<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ManualDiscoverApplicationsTemplate<PSCustomObject>
#>
function ConvertFrom-BetaJsonToManualDiscoverApplicationsTemplate {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSSailpointBeta => BetaManualDiscoverApplicationsTemplate' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in BetaManualDiscoverApplicationsTemplate
        $AllProperties = ("application_name", "domain")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "application_name"))) { #optional property not found
            $ApplicationName = $null
        } else {
            $ApplicationName = $JsonParameters.PSobject.Properties["application_name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "domain"))) { #optional property not found
            $Domain = $null
        } else {
            $Domain = $JsonParameters.PSobject.Properties["domain"].value
        }

        $PSO = [PSCustomObject]@{
            "application_name" = ${ApplicationName}
            "domain" = ${Domain}
        }

        return $PSO
    }

}

