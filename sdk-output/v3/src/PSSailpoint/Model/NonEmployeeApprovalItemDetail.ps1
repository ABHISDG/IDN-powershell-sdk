#
# IdentityNow V3 API
# Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.
# Version: 3.0.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Id
Non-Employee approval item id
.PARAMETER Approver
No description available.
.PARAMETER AccountName
Requested identity account name
.PARAMETER ApprovalStatus
No description available.
.PARAMETER ApprovalOrder
Approval order
.PARAMETER Comment
comment of approver
.PARAMETER Modified
When the request was last modified.
.PARAMETER Created
When the request was created.
.PARAMETER NonEmployeeRequest
No description available.
.OUTPUTS

NonEmployeeApprovalItemDetail<PSCustomObject>
#>

function Initialize-NonEmployeeApprovalItemDetail {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Id},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Approver},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AccountName},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${ApprovalStatus},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Double]]
        ${ApprovalOrder},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Comment},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${Modified},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${Created},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${NonEmployeeRequest}
    )

    Process {
        'Creating PSCustomObject: PSSailpoint => NonEmployeeApprovalItemDetail' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "approver" = ${Approver}
            "accountName" = ${AccountName}
            "approvalStatus" = ${ApprovalStatus}
            "approvalOrder" = ${ApprovalOrder}
            "comment" = ${Comment}
            "modified" = ${Modified}
            "created" = ${Created}
            "nonEmployeeRequest" = ${NonEmployeeRequest}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to NonEmployeeApprovalItemDetail<PSCustomObject>

.DESCRIPTION

Convert from JSON to NonEmployeeApprovalItemDetail<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

NonEmployeeApprovalItemDetail<PSCustomObject>
#>
function ConvertFrom-JsonToNonEmployeeApprovalItemDetail {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSSailpoint => NonEmployeeApprovalItemDetail' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in NonEmployeeApprovalItemDetail
        $AllProperties = ("id", "approver", "accountName", "approvalStatus", "approvalOrder", "comment", "modified", "created", "nonEmployeeRequest")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "id"))) { #optional property not found
            $Id = $null
        } else {
            $Id = $JsonParameters.PSobject.Properties["id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "approver"))) { #optional property not found
            $Approver = $null
        } else {
            $Approver = $JsonParameters.PSobject.Properties["approver"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "accountName"))) { #optional property not found
            $AccountName = $null
        } else {
            $AccountName = $JsonParameters.PSobject.Properties["accountName"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "approvalStatus"))) { #optional property not found
            $ApprovalStatus = $null
        } else {
            $ApprovalStatus = $JsonParameters.PSobject.Properties["approvalStatus"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "approvalOrder"))) { #optional property not found
            $ApprovalOrder = $null
        } else {
            $ApprovalOrder = $JsonParameters.PSobject.Properties["approvalOrder"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "comment"))) { #optional property not found
            $Comment = $null
        } else {
            $Comment = $JsonParameters.PSobject.Properties["comment"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "modified"))) { #optional property not found
            $Modified = $null
        } else {
            $Modified = $JsonParameters.PSobject.Properties["modified"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "created"))) { #optional property not found
            $Created = $null
        } else {
            $Created = $JsonParameters.PSobject.Properties["created"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "nonEmployeeRequest"))) { #optional property not found
            $NonEmployeeRequest = $null
        } else {
            $NonEmployeeRequest = $JsonParameters.PSobject.Properties["nonEmployeeRequest"].value
        }

        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "approver" = ${Approver}
            "accountName" = ${AccountName}
            "approvalStatus" = ${ApprovalStatus}
            "approvalOrder" = ${ApprovalOrder}
            "comment" = ${Comment}
            "modified" = ${Modified}
            "created" = ${Created}
            "nonEmployeeRequest" = ${NonEmployeeRequest}
        }

        return $PSO
    }

}

