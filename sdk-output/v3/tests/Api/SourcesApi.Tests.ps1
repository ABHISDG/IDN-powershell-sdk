#
# IdentityNow V3 API
# Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.
# Version: 3.0.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'PSSailpoint' -name 'SourcesApi' {
    Context 'New-ProvisioningPolicy' {
        It 'Test New-ProvisioningPolicy' {
            #$TestResult = New-ProvisioningPolicy -SourceId "TEST_VALUE" -ProvisioningPolicyDto "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-Source' {
        It 'Test New-Source' {
            #$TestResult = New-Source -Source "TEST_VALUE" -ProvisionAsCsv "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-SourceSchema' {
        It 'Test New-SourceSchema' {
            #$TestResult = New-SourceSchema -SourceId "TEST_VALUE" -Schema "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-ProvisioningPolicy' {
        It 'Test Remove-ProvisioningPolicy' {
            #$TestResult = Remove-ProvisioningPolicy -SourceId "TEST_VALUE" -UsageType "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-Source' {
        It 'Test Remove-Source' {
            #$TestResult = Remove-Source -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-SourceSchema' {
        It 'Test Remove-SourceSchema' {
            #$TestResult = Remove-SourceSchema -SourceId "TEST_VALUE" -SchemaId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DownloadSourceAccountsSchema' {
        It 'Test Invoke-DownloadSourceAccountsSchema' {
            #$TestResult = Invoke-DownloadSourceAccountsSchema -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DownloadSourceEntitlementsSchema' {
        It 'Test Invoke-DownloadSourceEntitlementsSchema' {
            #$TestResult = Invoke-DownloadSourceEntitlementsSchema -Id "TEST_VALUE" -SchemaName "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-ProvisioningPolicy' {
        It 'Test Get-ProvisioningPolicy' {
            #$TestResult = Get-ProvisioningPolicy -SourceId "TEST_VALUE" -UsageType "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-Source' {
        It 'Test Get-Source' {
            #$TestResult = Get-Source -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-SourceHealth' {
        It 'Test Get-SourceHealth' {
            #$TestResult = Get-SourceHealth -SourceId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-SourceSchema' {
        It 'Test Get-SourceSchema' {
            #$TestResult = Get-SourceSchema -SourceId "TEST_VALUE" -SchemaId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-ProvisioningPolicies' {
        It 'Test Get-ProvisioningPolicies' {
            #$TestResult = Get-ProvisioningPolicies -SourceId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-SourceSchemas' {
        It 'Test Get-SourceSchemas' {
            #$TestResult = Get-SourceSchemas -SourceId "TEST_VALUE" -IncludeTypes "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-Sources' {
        It 'Test Get-Sources' {
            #$TestResult = Get-Sources -Limit "TEST_VALUE" -Offset "TEST_VALUE" -Count "TEST_VALUE" -Filters "TEST_VALUE" -Sorters "TEST_VALUE" -ForSubadmin "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Send-ProvisioningPolicy' {
        It 'Test Send-ProvisioningPolicy' {
            #$TestResult = Send-ProvisioningPolicy -SourceId "TEST_VALUE" -UsageType "TEST_VALUE" -ProvisioningPolicyDto "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Send-Source' {
        It 'Test Send-Source' {
            #$TestResult = Send-Source -Id "TEST_VALUE" -Source "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Send-SourceSchema' {
        It 'Test Send-SourceSchema' {
            #$TestResult = Send-SourceSchema -SourceId "TEST_VALUE" -SchemaId "TEST_VALUE" -Schema "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-ProvisioningPoliciesInBulk' {
        It 'Test Update-ProvisioningPoliciesInBulk' {
            #$TestResult = Update-ProvisioningPoliciesInBulk -SourceId "TEST_VALUE" -ProvisioningPolicyDto "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-ProvisioningPolicy' {
        It 'Test Update-ProvisioningPolicy' {
            #$TestResult = Update-ProvisioningPolicy -SourceId "TEST_VALUE" -UsageType "TEST_VALUE" -JsonPatchOperation "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-Source' {
        It 'Test Update-Source' {
            #$TestResult = Update-Source -Id "TEST_VALUE" -JsonPatchOperation "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-SourceSchema' {
        It 'Test Update-SourceSchema' {
            #$TestResult = Update-SourceSchema -SourceId "TEST_VALUE" -SchemaId "TEST_VALUE" -JsonPatchOperation "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-UploadSourceAccountsSchema' {
        It 'Test Invoke-UploadSourceAccountsSchema' {
            #$TestResult = Invoke-UploadSourceAccountsSchema -Id "TEST_VALUE" -File "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-UploadSourceConnectorFile' {
        It 'Test Invoke-UploadSourceConnectorFile' {
            #$TestResult = Invoke-UploadSourceConnectorFile -SourceId "TEST_VALUE" -File "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-UploadSourceEntitlementsSchema' {
        It 'Test Invoke-UploadSourceEntitlementsSchema' {
            #$TestResult = Invoke-UploadSourceEntitlementsSchema -Id "TEST_VALUE" -SchemaName "TEST_VALUE" -File "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}
